# reattach-to-user-namespace 是一个工具，用于解决 macOS 上 tmux 与 系统剪贴板之间的兼容问题
# set -g default-command "reattach-to-user-namespace -l zsh"

# remap prefix from 'C-b' to 'C-f'
unbind C-b
set -g prefix 'C-f'
bind 'C-f' send-prefix

# 保留系统默认的 PATH
set-environment -g PATH "/usr/local/bin:/bin:/usr/bin:$PATH"
set -g default-shell /bin/zsh

# disable the repeat key delay
set -g repeat-time 0

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
setw -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# word separators for automatic word selection
setw -g word-separators ' @"=()[]_-:,.'
setw -ag word-separators "'"

# show times longger than supposed
set -g display-panes-time 2000

# tmux message are displayed for 4 seconds
set -g display-time 4000

# auto window rename
set -g automatic-rename on

# enable activity alerts
set-window-option -g monitor-activity on
set -g visual-activity on

# increase scrollback lines
set -g history-limit 10000

# enable clipboard
set -g set-clipboard on

# mouse behavior
set -g mouse on

# disable escape delay
set -sg escape-time 0

### LOOK && FEEL ###

# truecolor support
set -sa terminal-features ',tmux-256color:RGB'

# default terminal is 256 colors
set -g default-terminal 'tmux-256color'

# default statusbar colors
set -g status-bg default
set -g status-fg colour179

# aggressive resize
set-window-option -g aggressive-resize off

# iTerm2 window name
set -g set-titles on

# moving between panes
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# resize panes with vim movement keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# remove confirmation questions when closing windows/panes
bind x kill-pane
bind X kill-pane -a
bind & kill-window

# go to last window
bind ^ last-window

# splitting panes with current path
# bind c new-window -c '#{pane_current_path}'
# bind % split-window -h -c '#{pane_current_path}'
# bind '"' split-window -v -c '#{pane_current_path}'
bind v split-window -h -l 100 -c "#{?pane_path,#{s@^file.//@@:pane_path},#{pane_current_path}}"
bind s split-window -v -l 30 -c "#{?pane_path,#{s@^file.//@@:pane_path},#{pane_current_path}}"

# move panes to another window
bind M-1 join-pane -t :1
bind M-2 join-pane -t :2
bind M-3 join-pane -t :3
bind M-4 join-pane -t :4
bind M-5 join-pane -t :5
bind M-6 join-pane -t :6
bind M-7 join-pane -t :7
bind M-8 join-pane -t :8
bind M-9 join-pane -t :9

# Use vim keybindings in copy mode
set-window-option -g mode-keys vi

# Update default binding of `Enter` and `Space to also use copy-pipe
unbind -T copy-mode-vi Enter
unbind -T copy-mode-vi Space

bind -T edit-mode-vi Up send-keys -X history-up
bind -T edit-mode-vi Down send-keys -X history-down

# begin selection as in Vim
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle

# copy text in copy mode
bind -T copy-mode-vi y send -X copy-selection-and-cancel

# translator
bind -T copy-mode t send-keys -X copy-pipe-and-cancel "tmux-vocab"
bind -T copy-mode-vi t send-keys -X copy-pipe-and-cancel "tmux-vocab"

# run command in split pane / another window
bind | display-popup -b rounded -d "#{pane_current_path}" -E 'tmux-commands | xargs -r tmux split-window -h -c "#{pane_current_path}"'
bind - display-popup -b rounded -d "#{pane_current_path}" -E 'tmux-commands | xargs -r tmux split-window -v -c "#{pane_current_path}"'
bind C display-popup -b rounded -d "#{pane_current_path}" -E 'tmux-commands | xargs -r tmux new-window -c "#{pane_current_path}"'

# tmux menu
bind A display-menu -x R -y P -T '#[align=centre fg=orange] Commands ' \
  'Synchronize Panes' 's' 'set-window-option synchronize-panes' \
  'Rename Tab' ',' 'command-prompt -I "#W" { rename-window "%%" }' \
  'Run Tmux Command' ':' 'command-prompt'

# project commands
bind E display-popup -b rounded -d "#{pane_current_path}" -E 'tmux-project commands | xargs -r tmux-run -t right run --'

# project menu
bind R run-shell 'tmux-project -d "#{pane_current_path}" menu'

# grep lines
bind G display-popup -b rounded -h 90% -w 85% -x C -y C -d "#{pane_current_path}" -E "tmux-grep | xargs -r tmux-helix open"

# switch pane
bind P display-popup -b rounded -T '#[fg=orange]❀ Panes' -E 'tmux-panes'

# switch session
bind S display-popup -b rounded -T '#[fg=orange]❀ Sessions' -E 'tmux-sessions'

# popup session
bind O if-shell -F '#{==:#{session_name},popup}' {
  detach-client
} {
  if-shell -F '#{e|==:#{N/s:popup},0}' {
    new-session -d -s 'popup' 'tmux source-file ~/.dotfiles/tmux/sessions/popup.tmux.conf'
  }
  display-popup -b rounded -h 90% -w 85% -E 'tmux attach-session -t popup'
}

# status bar
set -g status on
set -g status-interval 1
set -g status-position bottom
set -g status-justify left
set -g status-style none,fg=#a89984,bg=#3c3836

# status variables format
if-shell 'test "$(uname)" = "Darwin"' {
  set -g @OS ""
  set -g @IM "  #(defaults read ~/Library/Preferences/com.apple.HIToolbox.plist AppleCurrentKeyboardLayoutInputSourceID | awk -F. '{print $4}' | sed s/PinyinKeyboard/中/)"
  set -g @CPU " #(iostat -c 2 disk0 | sed '/^\s*$/d' | tail -n 1 | awk '{usage=100-$6} END {print(usage)}' | sed 's/,/./')"
} {
  set -g @OS ""
  set -g @IM " #(whoami)#{?SSH_CLIENT,@#h,}"
  set -g @CPU " #(vmstat 1 2 | tail -1 | awk '{usage=100-$15} END {print(usage)}' | sed 's/,/./')"
}
set -g @GIT_BRANCH " #(git -C #{pane_current_path} rev-parse --abbrev-ref HEAD || echo ' ')"

# status bar left
set -g status-left-length 100
set -g status-left-style none
set -g status-left '#[fg=#282828,bg=#a89984,nobold] #{E:@OS} #S  #[fg=#a89984,bg=#3c3836,nobold]'

# status bar right
set -g status-right-length 150
set -g status-right-style none
set -g status-right '#[fg=#504945,bg=#3c3836]#[fg=#a89984,bg=#504945] #{E:@CPU}%% #[fg=#3c3836]#[fg=#a89984,bg=#504945]  %a %b %d #[fg=#3c3836] #[fg=#a89984,bg=#504945] %H:%M %p #[fg=#3c3836,bg=#504945]#[fg=#a89984,bg=#3c3836]#[fg=#282828,bg=#a89984] #{E:@GIT_BRANCH} #[fg=#3c3836] #[fg=#282828,bg=#a89984]#{E:@IM} '

# window bar style
set -g window-status-style 'fg=#3c3836,bg=#504945'
set -g window-status-current-style 'fg=#ebdbb2,bg=#49556a'
set -g window-status-activity-style 'fg=#3c3836,bg=#504945'

set -g window-status-format '#[fg=#3c3836,nobold]#[fg=#a89984] #I: #W #{?window_last_flag, ,}#{?window_activity_flag,#[fg=#d79921] ,}#[fg=#504945,bg=#3c3836,nobold]'
set -g window-status-current-format '#[fg=#3c3836,nobold]#[fg=#ebdbb2] #I: #W #[fg=#689d6a]#{?window_zoomed_flag,,} #[fg=#49556a,bg=#3c3836,nobold]'
set -g window-status-separator ''

# pane border style
set -g pane-active-border-style fg='#fe8019'
set -g pane-border-style fg='#3c3836'

# message style
set -g message-style none,fg='#fe8010',bg='#504945'
set -g message-command-style none,fg='#fe8010',bg='#504945'

# mode style
set -g mode-style 'bg=brightblack,fg=white,noreverse'

set -g focus-events on

# List of plugins
# see this https://github.com/tmux-plugins/tpm to installation
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
