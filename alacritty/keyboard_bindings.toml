
# Key bindings
#
# Each binding is defined as an object with some properties. Most of the
# properties are optional. All of the alphabetical keys should have a letter for
# the `key` value such as `V`. Function keys are probably what you would expect
# as well (F1, F2, ..). The number keys above the main keyboard are encoded as
# `Key1`, `Key2`, etc. Keys on the number pad are encoded `Number1`, `Number2`,
# etc.  These all match the glutin::VirtualKeyCode variants.
#
# A list with all available `key` names can be found here:
# https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
# Possible values for `mods`
# `Command`, `Super` refer to the super/command/windows key
# `Control` for the control key
# `Shift` for the Shift key
# `Alt` and `Option` refer to alt/option
#
# mods may be combined with a `|`. For example, requiring control and shift
# looks like:
#
# mods: Control|Shift
#
# The parser is currently quite sensitive to whitespace and capitalization -
# capitalization must match exactly, and piped items must not have whitespace
# around them.
#
# Either an `action`, `chars`, or `command` field must be present.
#   `action` must be one of `Paste`, `PasteSelection`, `Copy`, or `Quit`.
#   `chars` writes the specified string every time that binding is activated.
#     These should generally be escape sequences, but they can be configured to
#     send arbitrary strings of bytes.
#   `command` must be a map containing a `program` string, and `args` array of
#     strings. For example:
#     - { ... , command: { program: "alacritty", args: ["-e", "vttest"] } }

[[keyboard.bindings]]
key = "R"
mods = "Command"
mode = "~Vi|~Search"
chars = "\f"

[[keyboard.bindings]]
key = "R"
mods = "Command"
mode = "~Vi|~Search"
action = "ClearHistory"

# use command + shift + w to close the window
[[keyboard.bindings]]
key = "W"
mods = "Command"
action = "Hide"

[[keyboard.bindings]]
key = "W"
mods = "Command|Shift"
action = "Quit"

# unused Error
[[keyboard.bindings]]
key = "N"
mods = "Command"
action = "SpawnNewInstance"

# unused Error
[[keyboard.bindings]]
key = "T"
mods = "Command"
action = "CreateNewWindow"

# use alt(option in mac) + left/right to move to the beginning/end of the near word
[[keyboard.bindings]]
key = "Left"
mods = "Alt"
chars = "\u001bb"

[[keyboard.bindings]]
key = "Right"
mods = "Alt"
chars = "\u001bf"

# use command + left/right to move to the beginning/end of the line
[[keyboard.bindings]]
key = "Left"
mods = "Command"
chars = "\u001bOH"
mode = "AppCursor"

[[keyboard.bindings]]
key = "Right"
mods = "Command"
chars = "\u001bOF"
mode = "AppCursor"

# use command + backspace to delete the whole line
[[keyboard.bindings]]
key = "Back"
mods = "Command"
chars = "\u0015"

# use command + ' to print "
[[keyboard.bindings]]
key = "'"
mods = "Command"
chars = "\u001d\""
